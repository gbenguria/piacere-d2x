include:
  - project: piacere/private/t23-ci-setup
    ref: main
    file:
      - gitlab-ci-scripts/utils.gitlab-ci.yml

      # Image tag variables generation job -------------
      # Stage: variable-generation ---------------------
      - gitlab-ci-scripts/generate-variables.gitlab-ci.yml
      
      # Downstream t23-ci-setup pipeline trigger job ---
      # Stage: integration-tests-publish-deploy --------
      - gitlab-ci-scripts/trigger-downstream.gitlab-ci.yml

variables:
  #------------------------
  # Component image tag data
  # ------------------------
  COMPONENT_WP: wp3
  D2X_IMAGE_NAME: d2x

  # ------------------------------------------
  # Space-separated component image abbreviation list
  # used to generate image tags and related variables.
  # It is also passed to the downstream integration tests,
  # publication and deployment pipeline.
  # ------------------------------------------
  IMAGE_NAMES: "$D2X_IMAGE_NAME"

# The quality stage does not apply here,
# since the base images come from Docker Hub.
# There are no unit tests either.

stages:
  - variable-generation
#  - quality
  - build
  - security
#  - unit-tests
  - integration-tests-publish-deploy

# Build jobs ----------------------

build-temp-docker-compose:
  # image: docker/compose:1.29.2 # this is too old
  image: docker:23.0.1
  stage: build
  services:
    # - docker:20.10.21-dind # not sure if this is the latest
    - docker:dind
  variables:
    GIT_DEPTH: 1
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_DEPTH: 1
    DOCKER_BUILDKIT: 1
    COMPOSE_DOCKER_CLI_BUILD: 1
    IMAGE_D2X: "$TMP_IMAGE_D2X"
    DOCKER_COMPOSE_PATH: "dc"
    DOCKER_COMPOSE_ENV_FILE_CACHE: ".env.piacere"
    DOCKER_COMPOSE_ENV_FILE: ".env.piacere"
  before_script:
    - !reference [.artifactory-login]
  script:
    - apk add docker-compose
    - cd $DOCKER_COMPOSE_PATH
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE_CACHE --project-directory ./ pull || true
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE_CACHE --project-directory ./ config
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE --project-directory ./ build
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE --project-directory ./ push
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE --project-directory ./ config | grep image
    - echo "IMAGE_D2X=$IMAGE_D2X"
  tags:
    - docker

# Security jobs ------------------------

# Even though the images come from Docker Hub, we may still
# perform the trivy vulnerability tests.

security-trivy-d2x:
  stage: security
  variables:
    TMP_IMAGE: "$TMP_IMAGE_D2X"
  trigger: !reference [.trigger-security-trivy]
  needs:
    - job: build-temp-docker-compose
    - job: generate-variables
      artifacts: true

build-release-docker-compose:
  # image: docker/compose:1.29.2 # this is too old
  image: docker:23.0.1
  stage: build
  services:
    # - docker:20.10.21-dind # not sure if this is the latest
    - docker:dind
  variables:
    GIT_DEPTH: 1
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_DEPTH: 1
    DOCKER_BUILDKIT: 1
    COMPOSE_DOCKER_CLI_BUILD: 1
    DOCKER_COMPOSE_PATH: "dc"
    DOCKER_COMPOSE_ENV_FILE_CACHE: ".env.piacere"
    DOCKER_COMPOSE_ENV_FILE: ".env.releasepiacere"
  before_script:
    - !reference [.artifactory-login]
  script:
    - apk add docker-compose
    - cd $DOCKER_COMPOSE_PATH
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE_CACHE --project-directory ./ pull || true
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE_CACHE --project-directory ./ config
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE --project-directory ./ build
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE --project-directory ./ push
    - docker-compose --env-file $DOCKER_COMPOSE_ENV_FILE --project-directory ./ config | grep image
  tags:
    - docker
  when: manual